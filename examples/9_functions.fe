pub fn main() {
  no_args_no_return()
  
  const x = no_args_with_return()
  log.info("Got {x}")

  one_arg_no_return("Adam")

  const x = one_arg_with_return("Adam")
  log.info("Got: {x}")

  two_args_no_return("Adam", 25)

  const x = two_args_with_return("Adam", 25)
  log.info("Got: {x}")

  var_args("Adam", " ", "Bates", "!")

  const x = ["Hello", " ", "World"]
  var_args(..x)
}

fn no_args_no_return() {
  log.info("no_args_no_return")
}

fn no_args_with_return() -> string {
  log.info("no_args_with_return")

  // Unlike Rust, `return` keyword is mandatory
  return "Bates"
}

fn one_arg_no_return(arg1: string) {
  log.info("one_arg_no_return: {arg1}")
}

fn one_arg_with_return(arg1: string) -> string {
  log.info("one_arg_with_owned_return: {arg1}")

  return "Bates"
}

fn two_args_no_return(arg1: string, arg2: int) {
  log.info("two_args_no_return: {arg1}, {arg2}")
}

fn two_args_with_return(arg1: string, arg2: int) -> string {
  log.info("two_args_with_return: {arg1}, {arg2}")

  return "Bates"
}

fn var_args(..args: [string]) {
  log.info("var_args: {args}")
}

